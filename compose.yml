services:
  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ddhub_prototype_web
    # '/start' is the shell script used to run the service
    command: /app/start_web.sh
    # this volume is used to map the files and folders on the host to the container
    # so if we change code on the host, code in the docker container will also be changed
    volumes:
      - type: bind
        source: .
        target: /app
        bind:
          selinux: z
    ports:
      - 5010:5000
    env_file:
      - .env
    environment:
      - FLASK_APP=app
    depends_on:
      - redis
      - elasticsearch

  elasticsearch:
    image: elasticsearch:8.13.0
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - http.cors.enabled=true
      - http.cors.allow-origin="http://localhost:8080"
      - http.cors.allow-headers=X-Requested-With,Content-Type,Content-Length,Authorization

    volumes:
      - es_data:/usr/share/elasticsearch/data

  redis:
    image: redis:7.2

  celery_worker:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ddhub_celery_worker
    command: /app/start_celeryworker.sh
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - FLASK_APP=app
    depends_on:
      - redis
      - elasticsearch

  flower:
    build:
      context: .
      dockerfile: ./Dockerfile
    image: ddhub_celery_flower
    command: /app/start_flower.sh
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - FLASK_APP=app
    ports:
      - 5557:5555
    depends_on:
      - redis

  elasticvue:
    image: cars10/elasticvue
    ports:
      - 8080:8080
    environment:
      ELASTICVUE_CLUSTERS: '[{ "name": "ddlh cluster", "url": "http://localhost:9200" }]'
    depends_on:
      - elasticsearch

volumes:
  es_data:
